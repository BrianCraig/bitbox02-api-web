import { bytesToPackages, packagesToBytes } from "./uh2Frame"

describe("UH2 module", () => {
    describe("one packet", () => {
        test("serialization", () => {
            let message = Uint8Array.from([105])
            let resp = Uint8Array.from([255, 0, 0, 0, 193, 0, 1, 105, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238])
            expect(bytesToPackages(message)).toEqual([resp]);
        })

        test("deserialization", () => {
            let message = Uint8Array.from([255, 0, 0, 0, 193, 0, 10, 6, 118, 57, 46, 56, 46, 48, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
            let resp = Uint8Array.from([6, 118, 57, 46, 56, 46, 48, 0, 0, 1]);
            expect(packagesToBytes([message])).toEqual(resp);
        })

        test("serialization multipacket", () => {
            let message = Uint8Array.from([0, 72, 225, 75, 251, 215, 20, 181, 218, 55, 198, 253, 78, 128, 63, 60, 202, 54, 43, 37, 143, 143, 220, 98, 13, 110, 117, 56, 210, 132, 159, 18, 36, 90, 253, 130, 241, 66, 135, 94, 80, 213, 2, 157, 235, 80, 121, 15, 57, 210, 183, 116, 54, 77, 123, 208, 16, 35, 221, 132, 127, 225, 65, 60, 83, 43])
            let resp = [
                Uint8Array.from([255, 0, 0, 0, 193, 0, 66, 0, 72, 225, 75, 251, 215, 20, 181, 218, 55, 198, 253, 78, 128, 63, 60, 202, 54, 43, 37, 143, 143, 220, 98, 13, 110, 117, 56, 210, 132, 159, 18, 36, 90, 253, 130, 241, 66, 135, 94, 80, 213, 2, 157, 235, 80, 121, 15, 57, 210, 183, 116, 54, 77, 123, 208, 16]),
                Uint8Array.from([255, 0, 0, 0, 0, 35, 221, 132, 127, 225, 65, 60, 83, 43, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238])
            ]
            expect(bytesToPackages(message)).toEqual(resp);
        })

        test("deserialization multipacket", () => {
            let message = [
                Uint8Array.from([255, 0, 0, 0, 193, 0, 98, 0, 0, 7, 62, 69, 231, 98, 141, 205, 246, 112, 188, 57, 162, 89, 254, 160, 225, 184, 175, 149, 79, 138, 49, 117, 186, 11, 103, 151, 158, 240, 135, 177, 120, 83, 211, 97, 162, 17, 104, 37, 81, 79, 197, 216, 12, 118, 154, 33, 184, 203, 138, 208, 193, 107, 140, 5]),
                Uint8Array.from([255, 0, 0, 0, 0, 49, 252, 183, 138, 92, 44, 46, 14, 202, 142, 143, 124, 101, 204, 200, 53, 44, 61, 135, 49, 5, 156, 87, 141, 73, 72, 100, 7, 124, 114, 254, 81, 3, 44, 63, 232, 170, 96, 77, 191, 153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
            ]
            let resp = Uint8Array.from([0, 0, 7, 62, 69, 231, 98, 141, 205, 246, 112, 188, 57, 162, 89, 254, 160, 225, 184, 175, 149, 79, 138, 49, 117, 186, 11, 103, 151, 158, 240, 135, 177, 120, 83, 211, 97, 162, 17, 104, 37, 81, 79, 197, 216, 12, 118, 154, 33, 184, 203, 138, 208, 193, 107, 140, 5,  49, 252, 183, 138, 92, 44, 46, 14, 202, 142, 143, 124, 101, 204, 200, 53, 44, 61, 135, 49, 5, 156, 87, 141, 73, 72, 100, 7, 124, 114, 254, 81, 3, 44, 63, 232, 170, 96, 77, 191, 153]);
            expect(packagesToBytes(message)).toEqual(resp);
        })
    });

})
